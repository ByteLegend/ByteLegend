name: deploy

on:
  workflow_dispatch:
    inputs:
      buildTimestamp:
        description: 'Build timestamp (empty to deploy the latest)'
        required: true
        default: 'latest'

jobs:
  deploy:
    name: Deploy production
    runs-on: ubuntu-latest
    if: github.repository == 'ByteLegend/ByteLegend'
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.BYTELEGENDBOT_TOKEN }}
      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target_url: https://bytelegend.com
          environment: production
      - name: Deploy to k8s
        uses: gradle/gradle-build-action@v2
        with:
          arguments: deploy "-PbuildTimestamp=${{ github.event.inputs.buildTimestamp }}" -DagreePublicBuildScanTermOfService=yes
        env:
          ACCESS_KEY_ID_BEIJING: ${{ secrets.ACCESS_KEY_ID_BEIJING }}
          SECRET_ACCESS_KEY_BEIJING: ${{ secrets.SECRET_ACCESS_KEY_BEIJING }}
          ACCESS_KEY_ID_SEOUL: ${{ secrets.ACCESS_KEY_ID_SEOUL }}
          SECRET_ACCESS_KEY_SEOUL: ${{ secrets.SECRET_ACCESS_KEY_SEOUL }}
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target_url: https://bytelegend.com
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target_url: https://bytelegend.com
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
