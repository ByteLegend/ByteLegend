name: check

on:
  push:
    branches-ignore:
      - release
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - versions.json
      - livestream-data.json
  pull_request:
    branches-ignore:
      - release
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - versions.json
      - livestream-data.json
jobs:
  member-check:
    runs-on: 'ubuntu-latest'
    if: ${{ github.event.pull_request.author_association != 'CONTRIBUTOR' }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.BYTELEGENDBOT_TOKEN }}
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - name: Ktlint
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ktlint -DagreePublicBuildScanTermOfService=yes
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: check -x server:app:browserTest -x server:app:integTest -x server:app:webEditorBrowserTest -DagreePublicBuildScanTermOfService=yes
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: artifacts
          path: |
            server/app/build/reports/tests
  integ-test:
    runs-on: 'ubuntu-latest'
    if: ${{ github.event.pull_request.author_association != 'CONTRIBUTOR' }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.BYTELEGENDBOT_TOKEN }}
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ktlint server:app:integTest -DagreePublicBuildScanTermOfService=yes -Dforest.github.read.token=${{ secrets.GITHUB_TOKEN }}
  browser-test:
    runs-on: 'ubuntu-latest'
    if: ${{ github.event.pull_request.author_association != 'CONTRIBUTOR' }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.BYTELEGENDBOT_TOKEN }}
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: server:app:browserTest -DagreePublicBuildScanTermOfService=yes
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: artifacts
          path: |
            server/app/build/tmp/**/*.mp4
            server/app/build/reports/tests
  contributor-check:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: false
      - name: Checkout server-opensource
        run: git submodule update --init -- game-data
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - name: Ktlint
        uses: gradle/gradle-build-action@v2
        with:
          arguments: ktlint -DagreePublicBuildScanTermOfService=yes
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: server-opensource:check utils:checkLicenses -DagreePublicBuildScanTermOfService=yes
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: artifacts
          path: |
            server/app/build/tmp/**/*.mp4
            server/app/build/reports/tests
